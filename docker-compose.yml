networks:
  my-network:
    driver: bridge

services:
  db-master:
    build:
      context: ./docker/db/master
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db-master-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my-network

  db-slave1:
    build:
      context: ./docker/db/slave
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
      MASTER_HOST: db-master
    depends_on:
      - db-master
    volumes:
      - db-slave1-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - my-network

  db-slave2:
    build:
      context: ./docker/db/slave
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
      MASTER_HOST: db-master
    depends_on:
      - db-master
    volumes:
      - db-slave2-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - my-network

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db-master
      DB_PORT: 5432
    ports:
      - "8080:8080"
    depends_on:
      - db-master
    networks:
      - my-network

volumes:
  db-master-data:
  db-slave1-data:
  db-slave2-data:
