networks:
  my-network:
    driver: bridge

services:
  db-master:
    build:
      context: ./docker/db/master
    container_name: dating_db_master
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_REPLICATION_USER: ${DB_USER}
      POSTGRES_REPLICATION_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db-master-data:/var/lib/postgresql/data
    networks:
      - my-network

  db-slave:
    build:
      context: ./docker/db/slave
    container_name: dating_db_slave
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      REPLICATION_USER: ${DB_USER}
      REPLICATION_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    depends_on:
      - db-master
    volumes:
      - db-slave-data:/var/lib/postgresql/data
    networks:
      - my-network

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: go_otus_dating
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: db-master
      DB_PORT: 5433
    ports:
      - "8080:8080"
    depends_on:
      - db-master
    networks:
      - my-network

  newman:
    build:
      context: .
      dockerfile: docker/newman/Dockerfile
    depends_on:
      - app
    entrypoint: ["newman", "run", "/etc/newman/go-otus-dating-api.postman_collection.json", "--delay-request", "1000"]
    networks:
      - my-network

volumes:
  db-master-data:
  db-slave-data:
